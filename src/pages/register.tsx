import { NextPage } from "next";
import Head from "next/head";
import { useState } from "react";
import { api } from "~/utils/api";
import { useUserStore } from "~/utils/zustand";

const RegisterPage: NextPage = () => {
  // global state updater
  const setUser = useUserStore((state) => state.setUser);

  // local states
  const [username, setUsername] = useState('');
  const [pass, setPass] = useState('');
  const [confirm, setConfirm] = useState('');

  // trpc
  const { mutate } = api.auth.register.useMutation();
  const { data, refetch } = api.auth.login.useQuery(
    { user: username, pwd: pass },
    { refetchOnWindowFocus: false, enabled: false }
  );

  return (
    <>
      <Head>
        <title>Register | CVE Dashboard</title>
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center">
        <div className="flex flex-col my-4">
          <label htmlFor="username"
            className="pl-1 mb-1"
          >
            Username
          </label>
          <input className="p-2 border-2 border-[#ccc] rounded"
            id="username"
            type="text"
            placeholder="Username"
            maxLength={40}
            value={username}
            onChange={(e) => setUsername(e.target.value)}
          />
        </div>
        
        <div className="flex flex-col my-4">
          <label htmlFor="username"
            className="pl-1 mb-1"
          >
            Password
          </label>
          <input className="p-2 border-2 border-[#ccc] rounded"
            id="password"
            type="password"
            placeholder="Password"
            maxLength={50}
            value={pass}
            onChange={(e) => setPass(e.target.value)}
          />
        </div>
        
        <div className="flex flex-col my-4">
          <label htmlFor="confirm-password"
            className="pl-1 mb-1"
          >
            Confirm password
          </label>
          <input className="p-2 border-2 border-[#ccc] rounded"
            id="confirm-password"
            type="password"
            placeholder="Confirm password"
            maxLength={50}
            value={confirm}
            onChange={(e) => setConfirm(e.target.value)}
          />
        </div>
        
        <button className="text-white rounded-xl mt-4 px-16 py-4 bg-blue-500 disabled:bg-gray-300 hover:bg-blue-400 transition"
          disabled={
            username === ''
            || pass === ''
            || confirm === ''
            || pass !== confirm
          }
          onClick={async() => {
            const credentials = {
              user: username,
              pwd: pass
            };
            mutate(credentials);
            const { data } = await refetch();
            console.log(data);
            if(data !== undefined) {
              setUser({
                jwt: data.jwt,
                user: data.user,
                setUser,
              });
              location.href = "/";
            }
          }}
        >
          Register
        </button>
      </main>
    </>
  );
}

export default RegisterPage;
